[tool.poetry]
name = 'madr-backend'
version = '0.1.0'
description = ''
authors = ['lealre <renaanvp@gmail.com>']
readme = 'README.md'
packages = [{include = 'src'}]

[tool.poetry.dependencies]
python = '3.12.*'
alembic = '^1.13.2'
aiosqlite = '^0.20.0'
asyncpg = '^0.30.0'
email-validator = '^2.2.0'
fastapi = {extras = ['standard'], version = '^0.112.0'}
python-multipart = '^0.0.9'
pydantic-settings = '^2.4.0'
pyjwt = '^2.9.0'
pwdlib = {extras = ['argon2'], version = '^0.2.0'}
sqlalchemy = '^2.0.31'

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
factory-boy = '^3.3.0'
freezegun = '^1.5.1'
gevent = "^24.11.1"
mypy = "^1.13.0"
pytest = '^8.3.2'
pytest-cov = '^5.0.0'
ruff = '0.8.4'
taskipy = '^1.13.0'
testcontainers = '^4.7.2'

[tool.pytest.ini_options]
pythonpath = '.'
addopts = '-p no:warnings'

[tool.coverage.run]
concurrency = ["gevent"]
omit = ["*/utils/*", "__init__.py"]

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.mypy]
strict = true
show_error_codes = true
pretty = true
ignore_missing_imports = true
exclude = [ ".venv", "migrations"]

[tool.taskipy.tasks]
run = 'fastapi dev src/app.py'
superuser = 'python src/utils/create_supersuer.py'
pre_test = 'task lint'
test = 'pytest --cov=src --cov-report=term-missing:skip-covered --cov-fail-under=100 -vv'
post_test = 'coverage html'
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'

[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'
